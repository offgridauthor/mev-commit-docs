{
  "openapi": "3.0.0",
  "info": {
    "title": "Provider API",
    "version": "1.0.0-alpha",
    "license": {
      "name": "Business Source License 1.1",
      "url": "https://github.com/primev/mev-commit/blob/main/LICENSE"
    }
  },
  "paths": {
    "/v1/provider/cancel_transaction/{txHash}": {
      "post": {
        "summary": "CancelTransaction",
        "description": "CancelTransaction is called by the provider to cancel a transaction sent from this wallet.",
        "operationId": "Provider_CancelTransaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1CancelResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "txHash",
            "description": "Hex string encoding of the hash of the transaction that the bidder wants to cancel.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/v1/provider/get_min_stake": {
      "get": {
        "summary": "GetMinStake",
        "description": "GetMinStake is called by the provider to get the minimum stake required to be in the provider registry.",
        "operationId": "Provider_GetMinStake",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1StakeResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/provider/get_pending_txns": {
      "get": {
        "summary": "GetPendingTxns",
        "description": "GetPendingTxns is called by the provider to get the pending transactions for the wallet.",
        "operationId": "Provider_GetPendingTxns",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1PendingTxnsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/provider/get_stake": {
      "get": {
        "summary": "GetStake",
        "description": "GetStake is called by the provider to get its stake in the provider registry.",
        "operationId": "Provider_GetStake",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1StakeResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/provider/receive_bids": {
      "get": {
        "summary": "ReceiveBids",
        "description": "ReceiveBids is called by the provider to receive bids from the mev-commit node.\nThe mev-commit node will stream bids to the provider as the response.",
        "operationId": "Provider_ReceiveBids",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/rpcproviderapiv1Bid"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  },
                  "title": "Stream result of rpcproviderapiv1Bid"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/v1/provider/register_stake/{amount}": {
      "post": {
        "summary": "RegisterStake",
        "description": "RegisterStake is called by the provider to register its stake in the provider registry.",
        "operationId": "Provider_RegisterStake",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1StakeResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "amount",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/v1/provider/send_processed_bids": {
      "post": {
        "summary": "SendProcessedBids",
        "description": "SendProcessedBids is called by the provider to send processed bids to the mev-commit node.\nThe provider will stream processed bids to the mev-commit node.",
        "operationId": "Provider_SendProcessedBids",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcproviderapiv1EmptyMessage"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1BidResponse"
              }
            }
          },
          "description": "Response sent by the provider with the decision on the bid received. (streaming inputs)",
          "required": true
        }
      }
    }
  },
  "components": {
    "schemas": {
      "googlerpcStatus": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/protobufAny"
            }
          }
        }
      },
      "protobufAny": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string"
          }
        },
        "additionalProperties": {}
      },
      "rpcproviderapiv1Bid": {
        "type": "object",
        "example": {
          "bidAmount": 1000000000000000000,
          "bidDigest": "9dJinwL+FZ6B1xsIQQo8t8B0ZXJubJwY86l/Yu7yAH159QrPHU0qj2P+YFj+llbuI1ZygdxGsX8+P3byMEA5ig==",
          "blockNumber": 123456,
          "txHash": "91a89B633194c0D86C539A1A5B14DCCacfD47094"
        },
        "properties": {
          "txHash": {
            "type": "string",
            "description": "Hex string encoding of the hash of the transaction that the bidder wants to include in the block.",
            "pattern": "[a-fA-F0-9]{40}"
          },
          "bidAmount": {
            "type": "string",
            "format": "int64",
            "description": "Amount of ETH that the bidder is willing to pay to the provider for including the transaction in the block."
          },
          "blockNumber": {
            "type": "string",
            "format": "int64",
            "description": "Max block number that the bidder wants to include the transaction in."
          },
          "bidDigest": {
            "type": "string",
            "format": "byte",
            "description": "Digest of the bid message signed by the bidder."
          }
        },
        "description": "Signed bid message from bidders to the provider.",
        "title": "Bid message",
        "required": ["txHash", "bidAmount", "blockNumber", "bidDigest"]
      },
      "rpcproviderapiv1EmptyMessage": {
        "type": "object"
      },
      "v1BidResponse": {
        "type": "object",
        "example": {
          "bidDigest": "9dJinwL+FZ6B1xsIQQo8t8B0ZXJubJwY86l/Yu7yAH159QrPHU0qj2P+YFj+llbuI1ZygdxGsX8+P3byMEA5ig==",
          "status": "STATUS_ACCEPTED"
        },
        "properties": {
          "bidDigest": {
            "type": "string",
            "format": "byte",
            "description": "Digest of the bid message signed by the bidder."
          },
          "status": {
            "$ref": "#/components/schemas/v1BidResponseStatus"
          }
        },
        "description": "Response sent by the provider with the decision on the bid received.",
        "title": "Bid response",
        "required": ["bidDigest", "status"]
      },
      "v1BidResponseStatus": {
        "type": "string",
        "enum": ["STATUS_ACCEPTED", "STATUS_REJECTED"]
      },
      "v1CancelResponse": {
        "type": "object",
        "example": {
          "txHash": "91a89B633194c0D86C539A1A5B14DCCacfD47094"
        },
        "properties": {
          "txHash": {
            "type": "string",
            "description": "Hex string encoding of the hash of the transaction that the bidder wants to cancel.",
            "pattern": "[a-fA-F0-9]{40}"
          }
        },
        "description": "Hash of the cancellation transaction request.",
        "title": "Cancel response",
        "required": ["txHash"]
      },
      "v1PendingTxnsResponse": {
        "type": "object",
        "properties": {
          "pendingTxns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1TransactionInfo"
            },
            "description": "List of pending transactions in the provider provider_registry."
          }
        },
        "description": "Transaction info returned by the provider.",
        "title": "Pending transactions list",
        "required": ["pendingTxns"]
      },
      "v1StakeResponse": {
        "type": "object",
        "example": {
          "amount": "1000000000000000000"
        },
        "properties": {
          "amount": {
            "type": "string"
          }
        },
        "description": "Get staked amount for provider in the provider provider_registry.",
        "title": "Stake response"
      },
      "v1TransactionInfo": {
        "type": "object",
        "example": {
          "created": "2009-11-10 23:00:00 +0000 UTC m=+0.000000001",
          "nonce": 1234,
          "txHash": "91a89B633194c0D86C539A1A5B14DCCacfD47094"
        },
        "properties": {
          "txHash": {
            "type": "string",
            "description": "Hex string encoding of the hash of the transaction that the bidder wants to include in the block.",
            "pattern": "[a-fA-F0-9]{40}"
          },
          "nonce": {
            "type": "string",
            "format": "int64",
            "description": "Nonce used for the transaction."
          },
          "created": {
            "type": "string",
            "description": "Time when the transaction was created."
          }
        },
        "description": "Transaction info returned by the provider.",
        "title": "Transaction info",
        "required": ["txHash", "nonce", "created"]
      }
    }
  }
}
